!function(o,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng-cascading-dropdown-lib",["exports","@angular/core","@angular/forms","@angular/common"],t):t((o=o||self)["ng-cascading-dropdown-lib"]={},o.ng.core,o.ng.forms,o.ng.common)}(this,function(o,t,n,e){"use strict";var r=function(){function o(){}return o.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],o.ctorParameters=function(){return[]},o.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new o},token:o,providedIn:"root"}),o}(),a=function(){function o(){this.dropdownData=[],this.dropdownValue=[],this.childRootData=[],this.dropDownCounter=[],this.rootData=[],this.finalSelectedElement={},this.disableDropdown=!1,this.showDefaultSelection=!1,this.showHorizontal=!0,this.notifyFinalDropDownValue=new t.EventEmitter,this.notifyDropDownValue=new t.EventEmitter,this.notifyChangeEvent=new t.EventEmitter}return o.prototype.ngOnInit=function(){this.inputCascadingData&&(this.dropdownData=this.inputCascadingData,this.processParentDropdownData())},o.prototype.processParentDropdownData=function(){this.rootData=this.processParentChildDropdownData(this.dropdownData),this.dropDownCounter.push(Object.assign([],this.rootData)),this.dropdownValue[0]="default"},o.prototype.processParentChildDropdownData=function(o){return this.unflattenJson(o)},o.prototype.unflattenJson=function(o){for(var t,n,e=[],r={},a=0,i=o.length;a<i;a++)r[(t=o[a]).id]=t,r[t.id].childData=[];for(var d in r)r.hasOwnProperty(d)&&((n=r[d]).parentGroupID?r[n.parentGroupID].childData.push(n):e.push(n));return e},o.prototype.onDropdownChange=function(o,t){if("default"!==o&&o.childData.length>0){var n=t;this.dropDownCounter=[],0===t&&(this.dropdownValue=[]);for(var e=this.dropdownValue.length-1;e>n;e--)this.dropdownValue.splice(e,1);this.populateDropDownCounter(o,t),this.notifyChangeEvent.emit(!1)}else if("default"===o){n=t;this.dropdownValue[t]="default";for(e=this.dropdownValue.length-1;e>n;e--)this.dropdownValue.splice(e,1);for(e=this.dropDownCounter.length-1;e>n;e--)this.dropDownCounter.splice(e,1);this.notifyChangeEvent.emit(!1)}else this.dropdownValue[t]=o,0===t?(this.dropDownCounter=[],this.dropdownValue=[],this.dropDownCounter[0]=Object.assign([],this.rootData),this.dropdownValue[0]=o):(this.dropDownCounter=this.dropDownCounter.slice(0,t+1),this.dropdownValue=this.dropdownValue.slice(0,t+1)),this.finalSelectedElement={},this.finalSelectedElement=Object.assign({},o),this.notifyFinalDropDownValue.emit(this.finalSelectedElement),this.notifyDropDownValue.emit(this.dropdownValue)},o.prototype.populateDropDownCounter=function(o,t){this.dropdownValue[t]=o,this.dropDownCounter[0]=Object.assign([],this.rootData);for(var n=1;n<this.dropdownValue.length+1;n++)this.dropDownCounter[n]=Object.assign([],this.dropdownValue[n-1].childData);this.dropdownValue[t+1]="default"},o.decorators=[{type:t.Component,args:[{selector:"ng-cascading-dropdown",template:'<ng-container *ngIf="dropDownCounter.length > 0">\r\n    <div class="parent-container">\r\n        <div *ngFor="let dropDownData of dropDownCounter; let i =index;" [ngClass]="showHorizontal ? \'dropdown-container-horizontal\' : \'dropdown-container-vertical\'">\r\n            <select [disabled]="disableDropdown" name="dropdown" [ngModel]="dropdownValue[i]" [ngClass]="showHorizontal ? \'select-horizontal\' : \'select-vertical\'"\r\n                (ngModelChange)="onDropdownChange($event, i)">\r\n                <ng-container *ngIf="showDefaultSelection">\r\n                    <option value="default">\r\n                        {{ defaultSelectionData[i] }}\r\n                    </option>\r\n                </ng-container>\r\n                <option [ngValue]="data" *ngFor="let data of dropDownData; let i=index;">\r\n                    {{ data.grpName }}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n</ng-container>',styles:[".dropdown-container-horizontal{display:inline-block;margin:1%;width:10%}.dropdown-container-vertical{margin:1%;width:10%}.select-horizontal,.select-vertical{width:90%;height:30px;background-color:#fff!important;border-radius:3px;box-shadow:0 1px 5px #959595}"]}]}],o.ctorParameters=function(){return[]},o.propDecorators={inputCascadingData:[{type:t.Input}],defaultSelectionData:[{type:t.Input}],disableDropdown:[{type:t.Input}],showDefaultSelection:[{type:t.Input}],showHorizontal:[{type:t.Input}],notifyFinalDropDownValue:[{type:t.Output}],notifyDropDownValue:[{type:t.Output}],notifyChangeEvent:[{type:t.Output}]},o}(),i=function(){function o(){}return o.decorators=[{type:t.NgModule,args:[{declarations:[a],imports:[n.FormsModule,e.CommonModule],exports:[a]}]}],o}();o.NgCascadingDropdownLibComponent=a,o.NgCascadingDropdownLibModule=i,o.NgCascadingDropdownLibService=r,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=ng-cascading-dropdown-lib.umd.min.js.map